"use strict";var dr=Object.create;var L=Object.defineProperty;var Ir=Object.getOwnPropertyDescriptor;var fr=Object.getOwnPropertyNames;var Cr=Object.getPrototypeOf,Tr=Object.prototype.hasOwnProperty;var ne=(e,r)=>{for(var t in r)L(e,t,{get:r[t],enumerable:!0})},se=(e,r,t,o)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of fr(r))!Tr.call(e,n)&&n!==t&&L(e,n,{get:()=>r[n],enumerable:!(o=Ir(r,n))||o.enumerable});return e};var c=(e,r,t)=>(t=e!=null?dr(Cr(e)):{},se(r||!e||!e.__esModule?L(t,"default",{value:e,enumerable:!0}):t,e)),Or=e=>se(L({},"__esModule",{value:!0}),e);var ft={};ne(ft,{currentsReporter:()=>pt});module.exports=Or(ft);var _r=require("lodash"),V=c(require("path")),gr=c(require("semver"));var De=require("util"),Be=require("zlib");var Y=require("debug"),hr=c(require("fs-extra")),i=(0,Y.debug)("currents"),Ur=null;function ie(){Y.debug.enable("currents,currents:*")}function ae(e){Ur=e}var Se=c(require("lodash"));var de=c(require("axios")),Ie=c(require("axios-retry")),fe=c(require("lodash"));var $=()=>process.env.CURRENTS_API_URL??"https://cy.currents.dev",ce=()=>3e4;var q=require("axios"),z=c(require("pretty-ms"));var Pr=[];function ue(e){Pr.push(e)}var R=c(require("chalk")),D=c(require("util"));var me=[],Ee=[];var Q=(...e)=>{let r=D.default.format(...e);ue(r),console.log(r)},W=Q,l=(...e)=>{let r=D.default.format(...e);return Ee.push(r),i("WARNING: ",r),Q(R.default.bgYellow.black(" WARNING "),r)};var _=(...e)=>{let r=D.default.format(...e);return me.push(r),i("ERROR: ",r),Q(R.default.bgRed.white(" ERROR "),r)};var B=(e=2)=>console.log(Array(e).fill("").join(`
`)),Mt=R.default.cyan,yt=R.default.blueBright,vt=R.default.red,xt=R.default.yellow,wt=R.default.green,Ht=R.default.gray,Ft=R.default.white,Gt=R.default.black,kt=R.default.magenta,b=R.default.dim,jt=R.default.bold;var le=i.extend("http"),M=e=>[3*1e3,15*1e3,30*1e3][e-1],pe=e=>(le("isRetriableError: %o",{message:e.message,code:"code"in e?e.code:void 0,status:"response"in e?e.response?.status:void 0,headers:"response"in e?e.response?.headers:void 0,data:"response"in e?e.response?.data:void 0,isAxiosError:(0,q.isAxiosError)(e)}),"code"in e&&e.code&&["ECONNABORTED","ECONNREFUSED","ECONNRESET","ETIMEDOUT","ENETRESET"].includes(e.code)?!0:(0,q.isAxiosError)(e)?[429,502,503,504].includes(e.response?.status??0):!1),y=()=>3;function _e(e,r,t){le("Network request '%s' failed: '%s'. Next attempt is in %s (%d/%d).",`${t.method?.toUpperCase()} ${t.url}`,r.message,(0,z.default)(M(e)),e,y()),l("Network request '%s' failed: '%s'. Next attempt is in %s (%d/%d).",`${t.method?.toUpperCase()} ${t.url}`,r.message,(0,z.default)(M(e)),e,y())}var ge=i.extend("http"),v=null;function Sr(){let e=de.default.create({baseURL:$(),timeout:ce(),transitional:{clarifyTimeoutError:!0}});return e.interceptors.request.use(r=>{let t=r["axios-retry"]?.retryCount??0;r.headers.get("Content-Type")||r.headers.set("Content-Type","application/json");let o={...fe.default.pick(r,"method","url","headers"),data:Buffer.isBuffer(r.data)?"buffer":r.data};return t?ge("network request retry: %o",Re({...o,isRetry:!0})):ge("network request: %o",Re(o)),r}),(0,Ie.default)(e,{retries:y(),retryCondition:pe,retryDelay:M,shouldResetTimeout:!0,onRetry:_e}),e}function Ce(){return v||(v=Sr(),v)}function Re(e){return{method:e.method,baseUrl:$(),url:e.url,data:e.isRetry?"<retry>":Nr(e.data),headers:{...e.headers,"x-currents-key":"***"}}}function Nr(e){return e?.results?.raw?{...e,results:{...e.results,raw:"***"}}:e}var he=require("axios"),Ue=c(require("lodash")),g=require("ts-pattern");function Pe(e){(0,g.match)(e).when(he.isAxiosError,Lr).otherwise(()=>{l("Unexpected error while sending network request: %s",e)})}function Lr(e){return(0,g.match)(e).with({code:"ECONNABORTED"},()=>{l("Network connection aborted")}).with({code:"ECONNREFUSED"},()=>{l("Network connection aborted")}).with({code:"ECONNRESET"},()=>{l("Network connection reset")}).with({code:"ETIMEDOUT"},()=>{l("Network connection timeout")}).with({response:g.P.not(g.P.nullish)},r=>{Dr(r,{status:r.response.status,data:r.response.data})}).otherwise(r=>{l(`[currents] Unexpected network error: %s
%O`,e.message,{method:e.response?.config.method,url:e.response?.config.url,status:e.response?.status,payload:e.response?.config.data})})}function Dr(e,{status:r,data:t}){(0,g.match)(r).with(401,()=>{l(`[currents] ${e.response?.config.method} ${e.response?.config.url}} - 401 Unauthorized Request from cloud service`)}).with(400,()=>{l(`[currents] ${e.response?.config.method} ${e.response?.config.url} - 400 Bad Request from cloud service:
%o`,t)}).with(429,()=>{l(`[currents] ${e.response?.config.method} ${e.response?.config.url} - 429 Too Many Requests from cloud service`)}).with(422,()=>{Br(e,t)}).otherwise(()=>{l(`[currents] Unexpected network response: %s
%O`,e.message,{method:e.response?.config.method,url:e.response?.config.url,status:e.response?.status})})}function Br(e,r){(0,g.match)(r).with({code:Te.MISSING_SUITE,message:g.P.string,errors:g.P.array(g.P.string)},async t=>{let{message:o,errors:n}=t;B(1),_(...Oe(o,n))}).with({code:Te.RUN_EXPIRED,message:g.P.string},t=>{l(t.message)}).with({message:g.P.string,errors:g.P.array(g.P.string)},t=>{let{message:o,errors:n}=t;B(1),l(...Oe(o,n)),B(1)}).otherwise(()=>{l(`[currents] Unexpected network response: %s
%O`,e.message,{method:e.response?.config.method,url:e.response?.config.url,status:e.response?.status})})}var Te={RUN_CANCELLED:"RUN_CANCELLED",RUN_EXPIRED:"RUN_EXPIRED",MISSING_SUITE:"MISSING_SUITE"};function Oe(e,r){return Ue.default.isString(e)?r?.length===0?[e]:[e,`
${(r??[]).map(t=>`  - ${t}`).join(`
`)}
`]:["Unexpected network error"]}var Ae=i.extend("http");async function Ne(e,r=Ce){try{let t=await r().request(e);return Ae("network response: %o",{...Se.default.omit(t,"request","config"),url:t.config.url,method:t.config.method}),t}catch(t){let o=t;throw Ae("network error: %o",{code:o.code,message:o.message,url:o.config?.url,method:o.config?.method,status:o.response?.status,headers:o.response?.headers,data:o.response?.data}),Pe(o),o}}var Le=i.extend("run"),br=(0,De.promisify)(Be.gzip);async function be(e){try{Le("Run params: %o",e);let r=await Mr(JSON.stringify(e));return Ne({url:"v2/runs",method:"POST",headers:{"Content-Type":"application/json","Content-Encoding":"gzip"},data:r}).then(t=>t.data)}catch(r){throw Le("Failed to create the run:",r),r}}async function Mr(e){try{return await br(e)}catch(r){throw _("Failed to compress run payload:",r),r}}var yr=c(require("fs"));var Ko=i.extend("config");var vr=null;function Me(){return vr}var Qe=c(require("fs-extra")),We=require("jest-cli"),qe=c(require("tmp"));var T=c(require("fs-extra")),S=c(require("path"));async function ye(e){let r=await xr(e?.reportDir);if(!r)throw new Error("Failed to find the report dir");return{reportDir:r,configFilePath:e?.configFilePath??S.default.join(r,"config.json")}}async function xr(e){return e?(await x(e),e):wr(process.cwd(),".currents-report")}async function wr(e,r){let t=await T.default.readdir(e),o=null;for(let n of t){let m=S.default.join(e,n),E=await T.default.stat(m);E.isDirectory()&&n.startsWith(r)&&(!o||E.birthtime>o.birthtime)&&(o={name:n,birthtime:E.birthtime})}return o?o.name:null}async function x(e){try{return await T.default.pathExists(e)}catch{return _("Error checking if path exists:",_),!1}}async function ve(e){let r=S.default.join(e,"instances");return Hr(r)}async function Hr(e){let r=await T.default.readdir(e),t=[];for(let o of r){let n=S.default.join(e,o);(await T.default.stat(n)).isFile()&&t.push(n)}return t}async function h(e){try{return await T.default.readJson(e)}catch(r){throw _("Error while reading JSON file: %s",e,r),_}}async function X(e,r){try{return await T.default.writeFile(e,r,"utf8"),e}catch(t){throw _(`Error writing file at ${e}:`,t),t}}var w={};ne(w,{getNanoid:()=>Fr,userFacingNanoid:()=>ee});var Z=require("nanoid"),xe="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",Fr=(e=16)=>(0,Z.customAlphabet)(xe,e)(),ee=(0,Z.customAlphabet)(xe,12);var Ye=require("lodash");var we=require("lodash"),Gr=["bail","clearCache","clearMocks","collectCoverage","collectCoverageFrom","color","colors","config","coverage","coverageDirectory","coveragePathIgnorePatterns","coverageProvider","coverageReporters","coverageThreshold","debug","detectLeaks","detectOpenHandles","errorOnDeprecated","expand","forceExit","json","listTests","logHeapUsage","noStackTrace","notify","notifyMode","openHandlesTimeout","outputFile","prettierPath","reporters","runner","shard","showConfig","showSeed","silent","testNamePattern","verbose","waitNextEventLoopTurnForUnhandledRejectionEvents","watch","watchAll","watchPathIgnorePatterns","watchman"];function He(e){return(0,we.omit)(e,...Gr)}function Fe(e){let r=[];for(let[t,o]of Object.entries(e))t==="_"||t==="$0"||t.includes("-")||(typeof o=="boolean"?o&&r.push(`--${t}`):Array.isArray(o)?o.forEach(n=>{r.push(`--${t}=${n}`)}):r.push(`--${t}=${o}`));return r.join(" ")}var je=c(require("fs")),Ve=require("jest-config"),Ke=require("lodash"),re=c(require("path"));function H(e,r){return(...t)=>new Promise((o,n)=>{let m=0,E=()=>{m++;try{let p=e(...t);o(p)}catch(p){if(m>=r.length)n(p);else{let I=r[m-1];setTimeout(E,I)}}};E()})}var Ge=c(require("fs-extra")),kr=c(require("path"));async function F(e){let r=await Ge.default.pathExists(e);if(!r)throw new Error("File does not exist");return r}var ke=i.extend("jest-discovery");async function Je(e){try{let{config:r,configPath:t}=await(0,Ve.readInitialOptions)(e),o=(0,Ke.omit)(r,["collectCoverage","collectCoverageFrom","coverageDirectory","coveragePathIgnorePatterns","coverageProvider","coverageReporters","coverageThreshold","detectLeaks","detectOpenHandles","reporters","logHeapUsage","listTests","notify","notifyMode","silent","verbose","watch","watchAll","watchman","watchPlugins","shard"]);if(o.rootDir&&Object.keys(o).length===1)return null;let n=re.default.resolve(t?re.default.dirname(t):process.cwd(),`.jest-scanner-${new Date().getTime()}.config.js`),m=`module.exports=${JSON.stringify(o,null,2)}`;return ke("configFileContent: %O",m),je.default.writeFileSync(n,m),await H(F,[200,200,200,200,200,1e3])(n),n}catch(r){return _("Failed to recreate the config file"),ke("error %o",r),null}}async function $e(e){let r="!!##ThisPatternWillNotMatchAnyTestName##!!",t=e.options,o=He(t),n=Fe(o),m=t.config,E=await Je(m);return{cliArgs:[n,"--testNamePattern",r,"--reporters","@currents/cmd/discovery/jest","--shard=1/1",E?`--config=${E}`:"",...e.args].filter(I=>!(0,Ye.isEmpty)(I)),configFilePath:E}}var jr=i.extend("jest-discovery");async function ze(e,r){console.time(b("@currents/jest:fullTestSuite-ready"));let{cliArgs:t,configFilePath:o}=await $e(r);try{let n=qe.default.fileSync({postfix:".json"});return jr("running scanner: %o",t),process.env.CURRENTS_DISCOVERY_PATH=n.name,await(0,We.run)(t.concat(["--openHandlesTimeout=0"])),await H(F,Array.from({length:300},()=>100))(n.name),console.timeEnd(b("@currents/jest:fullTestSuite-ready")),await h(n.name)}catch(n){return _("Failed to obtain the jest full test suite:",n),[]}finally{o&&Qe.default.unlinkSync(o)}}var A=class{constructor(r){this.config=r}async getFullTestSuite(){return[]}};var G=class extends A{constructor(r){super(r)}async getFullTestSuite(){return ze(this.config.frameworkConfig,this.config.cliArgs)}};function Xe(e){switch(e.framework){case"jest":return new G(e);default:return new A(e)}}var u=require("lodash");var k=i.extend("ci"),Vr=(e,...r)=>(0,u.chain)(r).compact().join(e).value(),Kr=(e,r)=>(0,u.set)(e,(0,u.camelCase)(r),process.env[r]),a=e=>(0,u.transform)(e,Kr,{}),Jr=()=>process.env.TF_BUILD&&process.env.TF_BUILD_BUILDNUMBER,Yr=()=>process.env.TF_BUILD&&process.env.AZURE_HTTP_USER_AGENT,$r=()=>(0,u.some)(process.env,(e,r)=>/^CODEBUILD_/.test(r)),Qr=()=>process.env.bamboo_buildNumber,Wr=()=>process.env.CI_NAME&&process.env.CI_NAME==="codeship"&&process.env.CODESHIP,qr=()=>process.env.CI_NAME&&process.env.CI_NAME==="codeship"&&!process.env.CODESHIP,zr=()=>(0,u.some)(process.env,(e,r)=>/^CONCOURSE_/.test(r)),Xr=()=>process.env.GITLAB_CI||process.env.CI_SERVER_NAME&&/^GitLab/.test(process.env.CI_SERVER_NAME),Zr=()=>process.env.GCP_PROJECT||process.env.GCLOUD_PROJECT||process.env.GOOGLE_CLOUD_PROJECT,et=()=>process.env.JENKINS_URL||process.env.JENKINS_HOME||process.env.JENKINS_VERSION||process.env.HUDSON_URL||process.env.HUDSON_HOME,rt=()=>process.env.WERCKER||process.env.WERCKER_MAIN_PIPELINE_STARTED,tt={appveyor:"APPVEYOR",azure:Yr,awsCodeBuild:$r,bamboo:Qr,bitbucket:"BITBUCKET_BUILD_NUMBER",buildkite:"BUILDKITE",circle:"CIRCLECI",codeshipBasic:Wr,codeshipPro:qr,concourse:zr,codeFresh:"CF_BUILD_ID",drone:"DRONE",githubActions:"GITHUB_ACTIONS",gitlab:Xr,goCD:"GO_JOB_NAME",googleCloud:Zr,jenkins:et,semaphore:"SEMAPHORE",shippable:"SHIPPABLE",teamcity:"TEAMCITY_VERSION",teamfoundation:Jr,travis:"TRAVIS",wercker:rt,netlify:"NETLIFY",layerci:"LAYERCI"};function ot(){let{env:e}=process;return(0,u.findKey)(tt,r=>{if((0,u.isString)(r))return e[r];if((0,u.isFunction)(r))return r()})}var Ze=()=>({appveyor:a(["APPVEYOR_JOB_ID","APPVEYOR_ACCOUNT_NAME","APPVEYOR_PROJECT_SLUG","APPVEYOR_BUILD_NUMBER","APPVEYOR_BUILD_VERSION","APPVEYOR_PULL_REQUEST_NUMBER","APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH"]),azure:a(["BUILD_BUILDID","BUILD_BUILDNUMBER","BUILD_CONTAINERID","BUILD_REPOSITORY_URI","SYSTEM_TEAMPROJECT","SYSTEM_COLLECTIONURI"]),awsCodeBuild:a(["CODEBUILD_BUILD_ID","CODEBUILD_BUILD_NUMBER","CODEBUILD_RESOLVED_SOURCE_VERSION","CODEBUILD_SOURCE_REPO_URL","CODEBUILD_SOURCE_VERSION"]),bamboo:a(["bamboo_buildNumber","bamboo_buildResultsUrl","bamboo_planRepository_repositoryUrl","bamboo_buildKey"]),bitbucket:a(["BITBUCKET_REPO_SLUG","BITBUCKET_REPO_OWNER","BITBUCKET_BUILD_NUMBER","BITBUCKET_PARALLEL_STEP","BITBUCKET_STEP_RUN_NUMBER","BITBUCKET_PR_ID","BITBUCKET_PR_DESTINATION_BRANCH","BITBUCKET_PR_DESTINATION_COMMIT"]),buildkite:a(["BUILDKITE_REPO","BUILDKITE_SOURCE","BUILDKITE_JOB_ID","BUILDKITE_BUILD_ID","BUILDKITE_BUILD_URL","BUILDKITE_BUILD_NUMBER","BUILDKITE_PULL_REQUEST","BUILDKITE_PULL_REQUEST_REPO","BUILDKITE_PULL_REQUEST_BASE_BRANCH"]),circle:a(["CIRCLE_JOB","CIRCLE_BUILD_NUM","CIRCLE_BUILD_URL","CIRCLE_PR_NUMBER","CIRCLE_PR_REPONAME","CIRCLE_PR_USERNAME","CIRCLE_COMPARE_URL","CIRCLE_WORKFLOW_ID","CIRCLE_PULL_REQUEST","CIRCLE_REPOSITORY_URL","CI_PULL_REQUEST"]),codeshipBasic:a(["CI_BUILD_ID","CI_REPO_NAME","CI_BUILD_URL","CI_PROJECT_ID","CI_BUILD_NUMBER","CI_PULL_REQUEST"]),codeshipPro:a(["CI_BUILD_ID","CI_REPO_NAME","CI_PROJECT_ID"]),concourse:a(["BUILD_ID","BUILD_NAME","BUILD_JOB_NAME","BUILD_PIPELINE_NAME","BUILD_TEAM_NAME","ATC_EXTERNAL_URL"]),codeFresh:a(["CF_BUILD_ID","CF_BUILD_URL","CF_CURRENT_ATTEMPT","CF_STEP_NAME","CF_PIPELINE_NAME","CF_PIPELINE_TRIGGER_ID","CF_PULL_REQUEST_ID","CF_PULL_REQUEST_IS_FORK","CF_PULL_REQUEST_NUMBER","CF_PULL_REQUEST_TARGET"]),drone:a(["DRONE_JOB_NUMBER","DRONE_BUILD_LINK","DRONE_BUILD_NUMBER","DRONE_PULL_REQUEST"]),githubActions:a(["GITHUB_WORKFLOW","GITHUB_ACTION","GITHUB_EVENT_NAME","GITHUB_RUN_ID","GITHUB_RUN_ATTEMPT","GITHUB_REPOSITORY"]),gitlab:a(["CI_PIPELINE_ID","CI_PIPELINE_URL","CI_BUILD_ID","CI_JOB_ID","CI_JOB_URL","CI_JOB_NAME","GITLAB_HOST","CI_PROJECT_ID","CI_PROJECT_URL","CI_REPOSITORY_URL","CI_ENVIRONMENT_URL","CI_DEFAULT_BRANCH"]),goCD:a(["GO_SERVER_URL","GO_ENVIRONMENT_NAME","GO_PIPELINE_NAME","GO_PIPELINE_COUNTER","GO_PIPELINE_LABEL","GO_STAGE_NAME","GO_STAGE_COUNTER","GO_JOB_NAME","GO_TRIGGER_USER","GO_REVISION","GO_TO_REVISION","GO_FROM_REVISION","GO_MATERIAL_HAS_CHANGED"]),googleCloud:a(["BUILD_ID","PROJECT_ID","REPO_NAME","BRANCH_NAME","TAG_NAME","COMMIT_SHA","SHORT_SHA"]),jenkins:a(["BUILD_ID","BUILD_URL","BUILD_NUMBER","ghprbPullId"]),semaphore:a(["SEMAPHORE_BRANCH_ID","SEMAPHORE_BUILD_NUMBER","SEMAPHORE_CURRENT_JOB","SEMAPHORE_CURRENT_THREAD","SEMAPHORE_EXECUTABLE_UUID","SEMAPHORE_GIT_BRANCH","SEMAPHORE_GIT_DIR","SEMAPHORE_GIT_REF","SEMAPHORE_GIT_REF_TYPE","SEMAPHORE_GIT_REPO_SLUG","SEMAPHORE_GIT_SHA","SEMAPHORE_GIT_URL","SEMAPHORE_JOB_COUNT","SEMAPHORE_JOB_ID","SEMAPHORE_JOB_NAME","SEMAPHORE_JOB_UUID","SEMAPHORE_PIPELINE_ID","SEMAPHORE_PLATFORM","SEMAPHORE_PROJECT_DIR","SEMAPHORE_PROJECT_HASH_ID","SEMAPHORE_PROJECT_ID","SEMAPHORE_PROJECT_NAME","SEMAPHORE_PROJECT_UUID","SEMAPHORE_REPO_SLUG","SEMAPHORE_TRIGGER_SOURCE","SEMAPHORE_WORKFLOW_ID","PULL_REQUEST_NUMBER"]),shippable:a(["SHIPPABLE_BUILD_ID","SHIPPABLE_BUILD_NUMBER","SHIPPABLE_COMMIT_RANGE","SHIPPABLE_CONTAINER_NAME","SHIPPABLE_JOB_ID","SHIPPABLE_JOB_NUMBER","SHIPPABLE_REPO_SLUG","IS_FORK","IS_GIT_TAG","IS_PRERELEASE","IS_RELEASE","REPOSITORY_URL","REPO_FULL_NAME","REPO_NAME","BUILD_URL","BASE_BRANCH","HEAD_BRANCH","IS_PULL_REQUEST","PULL_REQUEST","PULL_REQUEST_BASE_BRANCH","PULL_REQUEST_REPO_FULL_NAME"]),teamcity:null,teamfoundation:a(["BUILD_BUILDID","BUILD_BUILDNUMBER","BUILD_CONTAINERID"]),travis:a(["TRAVIS_JOB_ID","TRAVIS_BUILD_ID","TRAVIS_BUILD_WEB_URL","TRAVIS_REPO_SLUG","TRAVIS_JOB_NUMBER","TRAVIS_EVENT_TYPE","TRAVIS_COMMIT_RANGE","TRAVIS_BUILD_NUMBER","TRAVIS_PULL_REQUEST","TRAVIS_PULL_REQUEST_BRANCH","TRAVIS_PULL_REQUEST_SHA"]),wercker:null,netlify:a(["BUILD_ID","CONTEXT","URL","DEPLOY_URL","DEPLOY_PRIME_URL","DEPLOY_ID"]),layerci:a(["LAYERCI_JOB_ID","LAYERCI_RUNNER_ID","RETRY_INDEX","LAYERCI_PULL_REQUEST","LAYERCI_REPO_NAME","LAYERCI_REPO_OWNER","LAYERCI_BRANCH","GIT_TAG"])}),nt=()=>{let{env:e}=process;return{appveyor:{sha:e.APPVEYOR_REPO_COMMIT,branch:e.APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH||e.APPVEYOR_REPO_BRANCH,message:Vr(`
`,e.APPVEYOR_REPO_COMMIT_MESSAGE,e.APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED),authorName:e.APPVEYOR_REPO_COMMIT_AUTHOR,authorEmail:e.APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL},awsCodeBuild:{sha:e.CODEBUILD_RESOLVED_SOURCE_VERSION,remoteOrigin:e.CODEBUILD_SOURCE_REPO_URL},azure:{sha:e.BUILD_SOURCEVERSION,branch:e.BUILD_SOURCEBRANCHNAME,message:e.BUILD_SOURCEVERSIONMESSAGE,authorName:e.BUILD_SOURCEVERSIONAUTHOR,authorEmail:e.BUILD_REQUESTEDFOREMAIL},bamboo:{sha:e.bamboo_planRepository_revision,branch:e.bamboo_planRepository_branch,authorName:e.bamboo_planRepository_username,remoteOrigin:e.bamboo_planRepository_repositoryURL},bitbucket:{sha:e.BITBUCKET_COMMIT,branch:e.BITBUCKET_BRANCH},buildkite:{sha:e.BUILDKITE_COMMIT,branch:e.BUILDKITE_BRANCH,message:e.BUILDKITE_MESSAGE,authorName:e.BUILDKITE_BUILD_CREATOR,authorEmail:e.BUILDKITE_BUILD_CREATOR_EMAIL,remoteOrigin:e.BUILDKITE_REPO,defaultBranch:e.BUILDKITE_PIPELINE_DEFAULT_BRANCH},circle:{sha:e.CIRCLE_SHA1,branch:e.CIRCLE_BRANCH,authorName:e.CIRCLE_USERNAME,remoteOrigin:e.CIRCLE_REPOSITORY_URL},codeshipBasic:{sha:e.CI_COMMIT_ID,branch:e.CI_BRANCH,message:e.CI_COMMIT_MESSAGE,authorName:e.CI_COMMITTER_NAME,authorEmail:e.CI_COMMITTER_EMAIL},codeshipPro:{sha:e.CI_COMMIT_ID,branch:e.CI_BRANCH,message:e.CI_COMMIT_MESSAGE,authorName:e.CI_COMMITTER_NAME,authorEmail:e.CI_COMMITTER_EMAIL},codeFresh:{sha:e.CF_REVISION,branch:e.CF_BRANCH,message:e.CF_COMMIT_MESSAGE,authorName:e.CF_COMMIT_AUTHOR},drone:{sha:e.DRONE_COMMIT_SHA,branch:e.DRONE_SOURCE_BRANCH,message:e.DRONE_COMMIT_MESSAGE,authorName:e.DRONE_COMMIT_AUTHOR,authorEmail:e.DRONE_COMMIT_AUTHOR_EMAIL,remoteOrigin:e.DRONE_GIT_HTTP_URL,defaultBranch:e.DRONE_REPO_BRANCH},githubActions:{sha:e.GITHUB_SHA,branch:e.GH_BRANCH||e.GITHUB_REF,defaultBranch:e.GITHUB_BASE_REF,remoteBranch:e.GITHUB_HEAD_REF,runAttempt:e.GITHUB_RUN_ATTEMPT},gitlab:{sha:e.CI_COMMIT_SHA,branch:e.CI_COMMIT_REF_NAME,message:e.CI_COMMIT_MESSAGE,authorName:e.GITLAB_USER_NAME,authorEmail:e.GITLAB_USER_EMAIL,remoteOrigin:e.CI_REPOSITORY_URL,defaultBranch:e.CI_DEFAULT_BRANCH},googleCloud:{sha:e.COMMIT_SHA,branch:e.BRANCH_NAME},jenkins:{sha:e.GIT_COMMIT,branch:e.GIT_BRANCH},semaphore:{sha:e.SEMAPHORE_GIT_SHA,branch:e.SEMAPHORE_GIT_BRANCH,remoteOrigin:e.SEMAPHORE_GIT_REPO_SLUG},shippable:{sha:e.COMMIT,branch:e.BRANCH,message:e.COMMIT_MESSAGE,authorName:e.COMMITTER},snap:null,teamcity:null,teamfoundation:{sha:e.BUILD_SOURCEVERSION,branch:e.BUILD_SOURCEBRANCHNAME,message:e.BUILD_SOURCEVERSIONMESSAGE,authorName:e.BUILD_SOURCEVERSIONAUTHOR},travis:{sha:e.TRAVIS_PULL_REQUEST_SHA||e.TRAVIS_COMMIT,branch:e.TRAVIS_PULL_REQUEST_BRANCH||e.TRAVIS_BRANCH,message:e.TRAVIS_COMMIT_MESSAGE},wercker:null,netlify:{sha:e.COMMIT_REF,branch:e.BRANCH,remoteOrigin:e.REPOSITORY_URL},layerci:{sha:e.GIT_COMMIT,branch:e.LAYERCI_BRANCH,message:e.GIT_COMMIT_TITLE}}},er=e=>{let r=rr();return r?(0,u.chain)(e()).get(r).value():{}};function st(){return(0,u.chain)(Ze()).omitBy(u.isNull).keys().value()}function it(e){return e&&st().includes(e)}function rr(){let e=ot();return k("detected CI provider name: %s",e),e||null}function at(){return er(Ze)}function tr(){return er(nt)}function or(e){let r=at(),t=rr(),o=ct(e,t);return k("detected CI provider: %s",t),k("detected CI params: %O",r),k("detected CI build ID: %o",o),{params:r,provider:t,ciBuildId:o}}function ct(e,r){return e?{source:"user",value:e}:it(r)?{source:"server",value:null}:{source:"random",value:`auto:${ee()}`}}var sr=require("@currents/commit-info"),ir=require("lodash");var j=require("lodash");var te=i.extend("ci-git");function nr(e){te("git commit existing info: %O",e);let r=tr();te("commit info from provider environment variables: %O",r);let t=(0,j.transform)(e,(o,n,m)=>{let E=n||(r?r[m]:null);return o[m]=(0,j.defaultTo)(E,null)});return te("combined git and environment variables from provider: %O",t),t}var ut=async()=>{let e=await(0,sr.commitInfo)();return nr({branch:e.branch,remoteOrigin:e.remote,authorEmail:e.email,authorName:e.author,message:e.message,sha:e.sha,ghaEventData:e.ghaEventData})},ar=(0,ir.memoize)(ut);var cr=c(require("getos")),ur=require("lodash"),d=require("os"),mr=require("util"),mt=async()=>{if((0,d.platform)()==="linux")try{let e=await(0,mr.promisify)(cr.default)();return"dist"in e&&"release"in e?[e.dist,e.release].join(" - "):(0,d.release)()}catch{return(0,d.release)()}return(0,d.release)()},Et=async()=>{let e=await mt();return{osName:(0,d.platform)(),osVersion:e,osCpus:[],osMemory:{free:(0,d.freemem)(),total:(0,d.totalmem)()}}},Er=(0,ur.memoize)(Et);var lr={name:"@currents/cmd",version:"1.0.0",main:"./dist/index.js",author:"Currents Software Inc",license:"GPL-3.0-or-later",description:"Currents CLI tools",scripts:{test:"vitest",rm:"rimraf dist",lint:'TIMING=1 eslint "**/*.ts*"',build:"tsup-node --minify --dts",dev:"tsup-node --watch --dts",release:"release-it","publish:npm":"npm run rm  && npm run build && ./publish.js"},devDependencies:{"@jest/reporters":"^29.7.0","@jest/types":"^29.6.3","@release-it/conventional-changelog":"^7.0.2","@types/debug":"^4.1.12","@types/fs-extra":"^11.0.4","@types/getos":"^3.0.4","@types/lodash":"^4.17.5","@types/node":"^20.14.2","@types/semver":"^7.5.8","@types/tmp":"^0.2.6","@types/uuid":"^9.0.8",jest:"^29.7.0",rimraf:"^5.0.7",tsup:"^8.1.0",typescript:"^5.4.5",vitest:"^1.3.0"},dependencies:{"@commander-js/extra-typings":"^11.1.0","@currents/commit-info":"1.0.1-beta.0",axios:"^1.7.2","axios-retry":"^4.4.0",commander:"^11.1.0",debug:"^4.3.5",dotenv:"^16.0.3",execa:"^8.0.1","fs-extra":"^11.2.0",getos:"^3.2.1","jest-cli":"^29.7.0","jest-config":"^29.7.0",lodash:"^4.17.21",nanoid:"^3.3.4","pretty-ms":"^7.0.1",semver:"^7.6.0","source-map-support":"^0.5.21",tmp:"^0.2.3","tmp-promise":"^3.0.3","ts-pattern":"^5.2.0"},bin:{currents:"./dist/bin/index.js","currents-cli":"./dist/bin/index.js"},files:["dist","!**/*.map","!**/*/*.map"],keywords:["cloud test dashboard","test reporter","test results","currents","currents dashboard","ci"],exports:{".":{import:"./dist/index.js",require:"./dist/index.js",types:"./dist/index.d.ts"},"./discovery/jest":{import:"./dist/discovery/jest/reporter.js",require:"./dist/discovery/jest/reporter.js",types:"./dist/discovery/jest/reporter.d.ts"},"./package.json":"./package.json"},"release-it":{npm:{publish:!1},github:{release:!0,releaseName:"${npm.name} v${version}"},plugins:{"@release-it/conventional-changelog":{preset:"angular",header:"# Changelog",ignoreVersion:!0,infile:"./CHANGELOG.md"}},git:{commitMessage:"chore: release ${npm.name} v${version}",tagName:"${npm.name}-v${version}"}}};var pr=lr.version;async function pt(){let e=Me();if(!e)throw new Error("Currents config is missing!");e.debug&&ie();let r=await ye(e);ae(dt(r.reportDir)),i("Reporter options: %o",r),W("Report directory: %s",r.reportDir);let t=await h(r.configFilePath);i("Report config: %o",t);let o=await ve(r.reportDir);i("Found %d instance results in the reportDir: %s",o.length,r.reportDir);let n=gt(r.reportDir),m=await x(n),E=Rt(r.reportDir),p=null;if(m){let f=await h(n);l("Marker file detected. The report was already uploaded: %o",{runUrl:f.response.runUrl,isoDate:f.isoDate}),await x(E)&&(p=await h(E),i("Full test suite file detected: %s",E))}if(p)i("The discovery stage was skipped");else{if(p=await Xe(t).getFullTestSuite(),It(p))throw new Error("Failed to discover the full test suite!");await X(E,JSON.stringify(p))}let I=p.length===1?p[0].name:null,K={currents:e},U={type:t.framework,version:t.frameworkVersion,clientVersion:pr},oe=w.userFacingNanoid(),N=or(e.ciBuildId),O={};for await(let f of o){let C=await h(f);O[C.groupId]||(O[C.groupId]=[]),O[C.groupId].push(C)}for await(let f of Object.keys(O)){let C=O[f],J=f;I&&(i("Default group found: %s, overwriting the group in the results",I),J=I,C=C.map(P=>({...P,groupId:I})));try{let P=await _t({ci:N,group:J,instances:C,fullTestSuite:p,config:K,machineId:oe,framework:U});i("Api response: %o",P),W("[%s] Run created: %s",J,P.runUrl);let Rr={response:P,isoDate:new Date().toISOString()};await X(n,JSON.stringify(Rr)),i("Marker file %s: %s",m?"overwritten":"created",n)}catch{throw new Error("Failed to upload the results to the dashboard")}}}async function _t({ci:e,group:r,instances:t,fullTestSuite:o,config:n,machineId:m,framework:E}){let p=await ar(),I=await Er(),K={browserName:"node",browserVersion:gr.default.coerce(process.version)?.version},{currents:U}=n,N={platform:{...K,...I},ci:e,commit:p,group:r,fullTestSuite:o,config:n,projectId:U.projectId,recordKey:U.recordKey,ciBuildId:e.ciBuildId.value??void 0,tags:U.tag??[],machineId:U.machineId??m,framework:E,instances:t};return i("Creating run: %o",(0,_r.mapValues)(N,(O,f)=>f==="recordKey"?"******":O)),be(N)}function gt(e){return V.default.join(e,"upload.marker.json")}function Rt(e){return V.default.join(e,"fullTestSuite.json")}function dt(e){return V.default.join(e,`.debug-${new Date().toISOString()}.log`)}function It(e){return e.length===0||e.some(r=>r.tests.length===0)}0&&(module.exports={currentsReporter});
/*! For license information please see index.js.LEGAL.txt */
//# sourceMappingURL=index.js.map